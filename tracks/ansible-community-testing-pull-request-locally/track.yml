slug: ansible-community-testing-pull-request-locally
id: tlaqejdacsnf
type: track
title: '5. Ansible Community: Testing A Pull Request Locally'
description: |
  In this course, we’ll see how to check out a pull request locally to test new features and bug fixes that are submitted to the `Ansible Collection's` GitHub repositories.

  - Install Ansible package
  - Check out the source
  - Find a pull request and check it out on a branch
  - Test the changes from pull request locally
icon: https://www.ansible.com/hubfs/2016_Images/Assets/Ansible-Mark-Large-RGB-Pool.png?hsLang=en-us
level: beginner
tags:
- ""
owner: redhat
developers:
- ompragash.viswanathan@gmail.com
private: false
published: true
challenges:
- slug: installing-ansible-core
  id: miuuyh7ay9nm
  type: challenge
  title: Installing Ansible package
  assignment: |-
    Ansible v2.10 is the first release of Ansible that fully supports Collections and it contains a minimal amount of Core supported modules and plugins.

    Install the latest version of `ansible-core` package which also includes `ansible-playbook` and `ansible-galaxy` binaries.

    ```
    pip3 install ansible-core --user
    ```

    Confirm that the latest ansible-core package is installed successfully by executing the below command:

    ```
    ansible --version
    ```

    ~~~
    ansible [core 2.11.0rc2]
      config file = None
      configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
      ansible python module location = /rusr/share/lib64/python3.6/site-packages/ansible
      ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
      executable location = /home/ansible/developing_colelction/bin/ansible
      python version = 3.6.12 (default, Sep 15 2020, 12:49:50) [GCC 4.8.5 20150623 (Red Hat 4.8.5-37)]
      jinja version = 2.11.3
      libyaml = True
    ~~~

    You can verify ansible-core version from the first line of the above output.
  tabs:
  - title: shell
    type: terminal
    hostname: shell
  difficulty: basic
  timelimit: 500
- slug: check-out-the-source-collection
  id: vyw9rpnnfy8v
  type: challenge
  title: Check out the source collection
  assignment: |-
    To start with, create a directory with the below structure under user's home location to install the collection source.

    `mkdir -p ~/ansible_collections/NAMESPACE/COLLECTION_NAME`

    For this course, we'll use a minimal collection `ansible.posix` where `ansible` is the namespace name and `posix` is the collection name and it will be created as follows:

    ```
    mkdir -p ~/ansible_collections/ansible/posix
    ```

    Clone `ansible.posix` collection from Github to the above created path:

    ```
    git clone https://github.com/ansible-collections/ansible.posix.git ~/ansible_collections/ansible/posix
    ```

    Checkout to `pr_example` branch:

    ```
    cd ~/ansible_collections/ansible/posix
    ```

    ```
    git checkout pr_example
    ```

    Run `git branch` command to confirm that the current working branch is `pr_example`.

    List the contents of the directory:

    ```
    ls
    ```
  tabs:
  - title: shell
    type: terminal
    hostname: shell
  difficulty: basic
  timelimit: 500
- slug: add-to-collections-path
  id: nquudxmxgt0q
  type: challenge
  title: Include ~/ansible-collections to collections path
  assignment: |-
    Include newly created `~/ansible-collections` path to `COLLECTIONS_PATH` in `ansible.cfg` file or environment variable.

    For this course, we'll include `~/ansible-collections` to `ANSIBLE_COLLECTIONS_PATH` environment variable.

    ```
    export ANSIBLE_COLLECTIONS_PATH=~/ansible_collections/
    ```

    Now, create a playbook that uses `acl` ansible module to grant user `devops` write access to a file:

    ```
    vim grant-access.yml
    ```

    ```yml
    - name: Grant user Devops write access to a file
      hosts: localhost
      become: true
      tasks:
      - ansible.posix.acl:
          path: /etc/foo.conf
          entity: devops
          etype: user
          permissions: w
          state: present
    ```

    To make it easier for you, grant-access.yml playbook is already created under `/home/devops` path.

    Execute the playbook:

    ```
    ansible-playbook grant-access.yml
    ```

    From the output, see there is a setfacl command error for the acl module (plugins/modules/acl.py) like below:

    ~~~
    fatal: [localhost]: FAILED! => {"changed": false, "cmd": "/bin/setfacl --test /etc/foo.conf", "msg": "Usage: setfacl [-bkndRLP] { -m|-M|-x|-X ... } file ...\nTry `setfacl --help' for more information.", "rc": 2, "stderr": "Usage: setfacl [-bkndRLP] { -m|-M|-x|-X ... } file ...\nTry `setfacl --help' for more information.\n", "stderr_lines": ["Usage: setfacl [-bkndRLP] { -m|-M|-x|-X ... } file ...", "Try `setfacl --help' for more information."], "stdout": "", "stdout_lines": []}
    ~~~

    In the next challenge, we'll find and checkout the pull request that fixes the above issue in `acl` module.
  tabs:
  - title: shell
    type: terminal
    hostname: shell
  difficulty: basic
  timelimit: 600
- slug: checkout-pr
  id: ajnxsjxtpuyo
  type: challenge
  title: Checking out the pull request on a branch
  assignment: |-
    A user named `test-ansible` has created a pull request to fix the `setfacl` command issue in `acl` module.

    Now, let's get the pull request that resolves the `setfacl` error submitted by `test-ansible` user and check it out on a branch:

    ```
    cd ~/ansible_collections/ansible/posix
    ```

    Create and switch to a new branch named testing_PRXXXX, where the XXXX is the issue number associated with the pull request. For this course, we'll check this [pull request](https://github.com/ansible-collections/ansible.posix/pull/252) and the issue number is `252` hence the branch name will be `testing_PR252`:

    ```
    git checkout -b testing_PR252
    ```

    ```
    git pull https://github.com/test-ansible/ansible.posix test_pr_locally
    ```

    The above command pulls the new code from the `test-ansible` user feature branch into the newly created branch.

    The output confirms that the code is fetched from the user’s feature branch successfully:

    ~~~
    From https://github.com/test-ansible/ansible.posix
     * branch            test_pr_locally -> FETCH_HEAD
    Updating 967cc62..6ce745b
    Fast-forward
     plugins/modules/acl.py | 1 +
     1 file changed, 1 insertion(+)
     ~~~
  tabs:
  - title: Shell
    type: terminal
    hostname: shell
  difficulty: basic
  timelimit: 600
- slug: testing-chenages-from-pr
  id: gjg05xgj4vyf
  type: challenge
  title: Test the changes from PR locally
  assignment: |-
    Now, that we have checked out the pull request locally on a new branch `testing_PR252` let's try to run the `grant-access.yml` playbook again to see if the issue is fixed.

    ```
    ansible-playbook grant-access.yml
    ```

    From the output, it's clear that the playbook ran successfully and the changes from the pull request fixed the issue in `acl` module:

    ```
    PLAY [Grant user Devops write access to a file] **********************************************************************************************************************************

    TASK [Gathering Facts] ***********************************************************************************************************************************************************
    ok: [localhost]

    TASK [ansible.posix.acl] *********************************************************************************************************************************************************
    changed: [localhost]

    PLAY RECAP ***********************************************************************************************************************************************************************
    localhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    ```

    As you have verified that the new code fixes the issue you can now try testing the pull requests in the same way and give feedback or the linked issue(s).
  tabs:
  - title: Shell
    type: terminal
    hostname: shell
  difficulty: basic
  timelimit: 600
checksum: "10526064767775105718"
