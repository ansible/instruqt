#!/bin/bash
USER=rhel

# creates the correct credential for servicenow on Controller
su - rhel -c 'ansible-galaxy collection install awx.awx'

# create admin project directory
su - rhel -c 'mkdir /tmp/admin_project/'

# allow awx and all others access to project directory
chmod a+x /tmp/admin_project/

# create student project directory
su - rhel -c 'mkdir /home/rhel/servicenow_project'

# allow awx and all others access to project directory
chmod a+x /home/rhel/

# symlink project directories so they can be picked up by controller
su - awx -c 'ln -s /home/rhel/servicenow_project/ /var/lib/awx/projects/'
su - awx -c 'ln -s /tmp/admin_project/ /var/lib/awx/projects/'

# creates a playbook to create a user in SNOW
tee /tmp/admin_project/create-snow-user.yml << EOF
---
- name: Run JT from Controller
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    cleanup: true
  tasks:

  - name: run jt
    awx.awx.job_launch:
      job_template: "SNOW - Configure/Destroy demo account"
      extra_vars:
        demo_username: "{{ lookup('env', 'SN_USERNAME') }}"
        demo_password: "{{ lookup('env', 'SN_USERNAME') }}"
        cleanup: "{{ cleanup }}"

EOF

# chown above file
sudo chown rhel:rhel /tmp/admin_project/create-snow-user.yml

# create a playbook to customize learner Controller
tee /home/rhel/setup-controller.yml << EOF
---
- name: Configure learner Controller 
  hosts: localhost
  connection: local
  collections:
    - awx.awx
  tasks:

  - name: Add EE to the controller instance
    awx.awx.execution_environment:
      name: "ServiceNow EE"
      image: quay.io/acme_corp/servicenow-ee:latest
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: add snow credential
    awx.awx.credential:
      name: 'servicenow credential'
      organization: Default
      credential_type: servicenow.itsm
      controller_host: "https://{{ ansible_host }}"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false
      inputs:
        SN_USERNAME: "{{ lookup('env', 'INSTRUQT_PARTICIPANT_ID') }}"
        SN_PASSWORD: "{{ lookup('env', 'INSTRUQT_PARTICIPANT_ID') }}"
        SN_HOST: https://ansible.service-now.com

  - name: add rhel machine credential
    awx.awx.credential:
      name: 'rhel credential'
      organization: Default
      credential_type: Machine
      controller_host: "https://{{ ansible_host }}"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false
      inputs:
        username: rhel
        password: ansible123!

  - name: add rhel inventory
    awx.awx.inventory:
      name: "rhel inventory"
      description: "rhel servers in demo environment"
      organization: "Default"
      state: present
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: add hosts
    awx.awx.host:
      name: "{{ item }}"
      description: "rhel host"
      inventory: "rhel inventory"
      state: present
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false
    loop:
      - node1
      - node2

  - name: Add group
    awx.awx.group:
      name: nodes
      description: "rhel host group"
      inventory: rhel inventory
      hosts:
        - node1
        - node2
      variables:
        ansible_user: rhel
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: Add student project
    awx.awx.project:
      name: "ServiceNow"
      description: "Project containing users ServiceNow playbooks"
      organization: Default
      state: present
      scm_type: manual
      local_path: servicenow_project
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: Add admin project
    awx.awx.project:
      name: "ServiceNow - admin"
      description: "Project containing users ServiceNow playbooks for admin use"
      organization: Default
      state: present
      scm_type: manual
      local_path: admin_project
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: Post SNOW user create job template
    job_template:
      name: "0 - Create SNOW demo user"
      job_type: "run"
      organization: "Default"
      inventory: "Demo Inventory"
      project: "ServiceNow - admin"
      playbook: "create-snow-user.yml"
      execution_environment: "ServiceNow EE"
      ask_variables_on_launch: true
      credentials:
        - "servicenow credential"
        - "Automation Controller"
      state: "present"
      controller_host: "https://localhost"
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false

  - name: Launch SNOW user create/destroy job
    awx.awx.job_launch:
      job_template: "0 - Create SNOW demo user"
      extra_vars:
        cleanup: false
      controller_host: https://localhost
      controller_username: admin
      controller_password: ansible123!
      validate_certs: false
  
  # - name: Remove job template
  #   job_template:
  #     name: "{{ item }}"
  #     job_type: "run"
  #     organization: "Default"
  #     inventory: "Demo Inventory"
  #     # project: "ServiceNow"
  #     # playbook: "incident-create.yml"
  #     # credentials:
  #     #   - "servicenow credential"
  #     state: "absent"
  #     controller_host: "https://localhost"
  #     controller_username: admin
  #     controller_password: ansible123!
  #     validate_certs: false
  #   loop:
  #     - "Demo Job Template"
  #     - "0 - Create SNOW demo user"

  # - name: Remove SNOW user create playbook from project directory
  #   ansible.builtin.file:
  #     path: /home/rhel/servicenow_project/create-snow-user.yml
  #     state: absent 

EOF

# chown above file
sudo chown rhel:rhel /home/rhel/setup-controller.yml

# execute above playbook
su - rhel -c 'ansible-playbook /home/rhel/setup-controller.yml'


# populate readme file with environment credentials
su - rhel -c 'tee -a /home/rhel/servicenow_project/readme.md << EOF
# Environment credentials

## Automation Controller
- username: student
- password: learn_ansible

## ServiceNow
- username: $(echo $INSTRUQT_PARTICIPANT_ID)
- password: $(echo $INSTRUQT_PARTICIPANT_ID)

EOF'

# set vscode default settings
su - $USER -c 'cat >/home/$USER/.local/share/code-server/User/settings.json <<EOL
{
    "git.ignoreLegacyWarning": true,
    "window.menuBarVisibility": "visible",
    "git.enableSmartCommit": true,
    "workbench.tips.enabled": false,
    "workbench.startupEditor": "readme",
    "telemetry.enableTelemetry": false,
    "search.smartCase": true,
    "git.confirmSync": false,
    "workbench.colorTheme": "Solarized Dark",
    "update.showReleaseNotes": false,
    "update.mode": "none",
    "ansible.ansibleLint.enabled": false,
    "ansible.ansible.useFullyQualifiedCollectionNames": true,
    "redhat.telemetry.enabled": true,
    "markdown.preview.doubleClickToSwitchToEditor": false,
    "files.exclude": {
        "**/.*": true
    }
}
EOL
cat /home/$USER/.local/share/code-server/User/settings.json'
