---
- name: Install code-server and certbot
  ansible.builtin.dnf:
    name:
      - "{{ codeserver_url }}"
      - certbot
    state: present
    disable_gpg_check: true
  register: __dnf_result
  until: __dnf_result is not failed
  retries: 30
  delay: 1

# solves error
# pkg_resources.DistributionNotFound: The 'requests>=2.14.2' distribution was not found and is required by acme
- name: Install requests python package
  ansible.builtin.pip:
    name: requests>=2.14.2

- name: Apply our systemd service file (instead of RPM file)
  ansible.builtin.template:
    src: code-server.service.j2
    dest: /etc/systemd/system/code-server.service
    owner: "{{ codeserver_username }}"
    group: wheel
    mode: '744'

# source: https://vscode.readthedocs.io/en/latest/getstarted/settings/
- name: Ensure custom facts directory exists
  ansible.builtin.file:
    path: "/home/{{ codeserver_username }}/.local/share/code-server/User/"
    recurse: true
    state: directory
    owner: "{{ codeserver_username }}"
    group: "{{ codeserver_username }}"
    mode: "755"

- name: Apply code server defaults
  ansible.builtin.template:
    src: settings.json
    dest: "/home/{{ codeserver_username }}/.local/share/code-server/User/settings.json"
    owner: "{{ codeserver_username }}"
    group: "{{ codeserver_username }}"
    mode: "0644"

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /home/{{ codeserver_username }}/.local/share/code-server/extensions/
    state: directory
    mode: "755"
    owner: "{{ codeserver_username }}"
    group: "{{ codeserver_username }}"

- name: Download custom VSCode extension files
  ansible.builtin.get_url:
    url: "{{ item.download_url }}"
    dest: ~{{ codeserver_username }}/.local/share/code-server/extensions/
    owner: "{{ codeserver_username }}"
    group: "{{ codeserver_username }}"
    mode: "0644"
  loop: "{{ codeserver_extensions }}"
  when: item.download_url is defined
  register: download_extension
  until: download_extension is not failed
  retries: 5

- name: Install custom extensions from local file
  become_user: "{{ codeserver_username }}"
  ansible.builtin.command: "/bin/code-server --install-extension ~{{ codeserver_username }}/.local/share/code-server/extensions/{{ item.filename }}"
  loop: "{{ codeserver_extensions }}"
  when: item.filename is defined
  register: install_extension
  until: install_extension is not failed
  retries: 5

- name: Install VS Code Marketplace extensions
  become_user: "{{ codeserver_username }}"
  ansible.builtin.command: "/bin/code-server --install-extension {{ item.name }}"
  loop: "{{ codeserver_extensions }}"
  when: (item.filename is undefined) or (item.download_url is undefined)
  register: install_extension
  until: install_extension is not failed
  retries: 5

- name: Daemon-reload, enable and start code-server
  ansible.builtin.systemd:
    name: code-server
    enabled: true
    state: started
    daemon_reload: true

- name: Editor block - update nginx configuration to support code server
  ansible.builtin.blockinfile:
    block: "{{ lookup('template', 'nginx_instruqt.conf') }}"
    dest: /etc/nginx/conf.d/automation-controller.nginx.conf
    insertbefore: "location / "
