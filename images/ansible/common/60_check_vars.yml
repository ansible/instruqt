##
# Uses {{ extra_vars }} dictionary to check if variables are set as yaml or environment variables using -name
# Converts environment variables to YAML equivalent and creates facts.
##
- name: Make sure track_vars variable is set
  ansible.builtin.assert:
    that: lookup('ansible.builtin.env', 'TRACK_SLUG') or track_slug is defined
    quiet: true
    fail_msg: "Please set the Ansible 'track_slug' variable or 'TRACK_SLUG' environment variable"

- name: Set track_slug fact from TRACK_SLUG environment variable
  ansible.builtin.set_fact:
    track_slug: "{{ lookup('ansible.builtin.env', 'TRACK_SLUG') }}"
  when:
    - track_slug is undefined
    - lookup('ansible.builtin.env', 'TRACK_SLUG')

- name: Include vars file from extra_vars directory
  block:
    - name: Include vars files - {{ track_slug }}
      ansible.builtin.include_vars:
        file: "{{ track_slug }}_vars.yml"

    - name: Check if vault_{{ track_slug }} vars file is present
      ansible.builtin.stat:
        path: "vault_{{ track_slug }}_vars.yml"
      register: vault_vars_file

    - name: Include vault vars files - {{ track_slug }}
      ansible.builtin.include_vars:
        file: "vault_{{ track_slug }}_vars.yml"
      when: vault_vars_file.stat.exists
  when: (track_slug is defined) and (track_slug | length > 0)

- name: Map required variables to facts
  ansible.builtin.set_fact:
    "{{ __extra_vars_item.name }}": "{{ lookup('ansible.builtin.env', __extra_vars_item.env | default(omit) ) or lookup('ansible.builtin.vars', __extra_vars_item.name | default(omit)) }}" # yamllint disable-line rule:line-length
  register: __extra_vars_results
  when: (extra_vars is defined) and (extra_vars | length > 0)
  loop_control:
    loop_var: __extra_vars_item
    label: "{{ __extra_vars_item.name }}"
  loop: "{{ extra_vars }}"
  no_log: true

- name: Check required variables are set
  ansible.builtin.assert:
    that:
      - lookup('ansible.builtin.vars', __extra_vars_results_item.__extra_vars_item.name) | length > 0
    fail_msg: |
      Please set either variable to continue:
        - Environment variable - {{ __extra_vars_results_item.__extra_vars_item.env | default('Not applicable - ignore') }}.
        - Ansible variable - {{ __extra_vars_results_item.__extra_vars_item.name }}.
    quiet: true
  when: (__extra_vars_results.results is defined) and (__extra_vars_results.results | length > 0)
  loop: "{{ __extra_vars_results.results }}"
  loop_control:
    loop_var: __extra_vars_results_item
    label: "{{ __extra_vars_results_item.__extra_vars_item.name }}"
  no_log: true
