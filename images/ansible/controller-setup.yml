---
- name: download aap.tar.gz to install controller
  hosts: localhost
  gather_facts: false

  tasks:
    - name: get yourself some updated workshop roles
      command: ansible-galaxy collection install --verbose --force-with-deps ansible.workshops

    - name: download aap
      vars:
        offline_token: "{{ lookup('file', 'offline_token.txt')}}"
      include_role:
        name: ansible.workshops.aap_download

- name: configures automation controller node
  hosts: all
  gather_facts: true
  become: true
  vars:

    admin_password: ansible123!

  tasks:
    # I include these in environment variables instead
    # - name: include red hat cred for registry.redhat.io
    #   include_vars:
    #     file: redhat_login.yml

    - name: Configure user 'rhel'
      ansible.builtin.user:
        name: rhel
        shell: /bin/bash
        password: "{{ 'ansible123!' | password_hash('sha512', 'mysecretsalt') }}"
        groups: wheel
        append: yes

    - name: enable sshd password auth
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^PasswordAuthentication'
        line: >-
          PasswordAuthentication yes

    - name: restart sshd
      ansible.builtin.systemd:
        name: sshd
        state: restarted

    - name: install automation controller
      vars:
        username: "{{ ansible_user }}"
        controllerinstall: "true"
      include_role:
        name: ansible.workshops.control_node

    - name: install workshop dependencies
      command: "ansible-galaxy collection install --force-with-deps ansible.workshops  -p /usr/share/ansible/collections"

    - name: Install controller lab packages for controller lab
      ansible.builtin.dnf:
        state: present
        name: "{{ item }}"
      loop:
        - /var/lib/ansible-automation-platform-bundle/automation-controller-cli-4.1.1-2.el8ap.x86_64.rpm

    - name: install code server
      vars:
        username: "{{ ansible_user }}"
      include_role:
        name: ansible.workshops.code_server

    - name: disable dnf automatic services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      loop:
        - dnf-automatic.timer

    - name: automatic.conf disable downloads
      ansible.builtin.lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^download_updates'
        line: download_updates = no

    - name: automatic.conf disable updates
      ansible.builtin.lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^apply_updates'
        line: apply_updates = no

    - name: Disable RHUI repos
      ansible.builtin.command: >
        dnf config-manager --set-disabled rhui*

    - name: copy setup-scripts to tower node
      copy:
        src: ./setup-scripts
        dest: /tmp
